name: Run Tests ðŸ§ª

on: [push, pull_request, workflow_dispatch]

jobs:
  buildAndTestForSomePlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - YarnSpinner
        unityVersion:
          - 2020.3.1f1
        targetPlatform:
          # - StandaloneOSX # Build a macOS standalone (Intel 64-bit).
          - StandaloneWindows64 # Build a Windows 64-bit standalone.
          # - StandaloneLinux64 # Build a Linux 64-bit standalone.
          # - iOS # Build an iOS player.
          # - Android # Build an Android player.
          # - WebGL # WebGL.
    steps:
      - name: Activate Unity
        uses: game-ci/unity-activate@1.3
        with:
          unityVersion: ${{ matrix.unityVersion }}

      - name: Create empty Unity project
        run: |
          mkdir -p ${{ matrix.projectPath }}/Assets
          mkdir -p ${{ matrix.projectPath }}/ProjectSettings 
          mkdir -p ${{ matrix.projectPath }}/Packages
      
      - name: Check out to Packages/YarnSpinner
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          path: Packages/YarnSpinner
          
      - name: Fetch from Cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ matrix.unityVersion }}-
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-
      
      - name: Run tests
        uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Upload test results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}
